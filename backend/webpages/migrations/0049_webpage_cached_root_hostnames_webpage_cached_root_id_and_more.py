# Generated by Django 4.2.25 on 2025-10-30 13:35

import django.contrib.postgres.fields
from django.db import migrations, models


def populate_cached_root_info(apps, schema_editor):
    """Populate cached_root_id and cached_root_hostnames for all pages"""
    WebPage = apps.get_model("webpages", "WebPage")

    def get_root(page):
        """Get root page for a given page"""
        current = page
        while current.parent:
            current = current.parent
        return current

    for page in WebPage.objects.all():
        root = get_root(page)
        page.cached_root_id = root.id
        page.cached_root_hostnames = root.hostnames or []
        page.save(update_fields=["cached_root_id", "cached_root_hostnames"])


class Migration(migrations.Migration):

    dependencies = [
        ("webpages", "0048_webpage_cache_updated_at_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="webpage",
            name="cached_root_hostnames",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=255),
                blank=True,
                default=list,
                help_text="Cached: Hostnames from root page (auto-maintained via signals)",
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="webpage",
            name="cached_root_id",
            field=models.IntegerField(
                blank=True,
                db_index=True,
                help_text="Cached: Root page ID for this page (auto-maintained via signals)",
                null=True,
            ),
        ),
        migrations.RunPython(populate_cached_root_info, migrations.RunPython.noop),
        migrations.AddIndex(
            model_name="webpage",
            index=models.Index(
                fields=["cached_root_id"], name="webpages_cached_root_idx"
            ),
        ),
    ]
