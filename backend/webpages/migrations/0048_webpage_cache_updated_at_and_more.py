# Generated by Django 4.2.25 on 2025-10-30 13:08

from django.db import migrations, models
import django.db.models.deletion


def populate_publication_cache(apps, schema_editor):
    """Populate publication cache for all existing pages"""
    WebPage = apps.get_model("webpages", "WebPage")
    PageVersion = apps.get_model("webpages", "PageVersion")
    from django.utils import timezone
    from django.db.models import Q

    now = timezone.now()

    for page in WebPage.objects.all():
        # Find current published version
        published_version = (
            PageVersion.objects.filter(page=page, effective_date__lte=now)
            .filter(Q(expiry_date__isnull=True) | Q(expiry_date__gt=now))
            .order_by("-version_number")
            .first()
        )

        # Find latest version
        latest = (
            PageVersion.objects.filter(page=page).order_by("-version_number").first()
        )

        # Update fields
        page.is_currently_published = published_version is not None
        page.current_published_version = published_version
        page.latest_version = latest

        if published_version:
            page.cached_effective_date = published_version.effective_date
            page.cached_expiry_date = published_version.expiry_date

        page.save()


class Migration(migrations.Migration):

    dependencies = [
        ("webpages", "0047_webpage_cached_path_webpage_webpages_cached_path_idx"),
    ]

    operations = [
        migrations.AddField(
            model_name="webpage",
            name="cache_updated_at",
            field=models.DateTimeField(
                auto_now=True, help_text="When publication cache was last updated"
            ),
        ),
        migrations.AddField(
            model_name="webpage",
            name="cached_effective_date",
            field=models.DateTimeField(
                blank=True,
                help_text="Cached: Effective date of current published version",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="webpage",
            name="cached_expiry_date",
            field=models.DateTimeField(
                blank=True,
                help_text="Cached: Expiry date of current published version",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="webpage",
            name="current_published_version",
            field=models.ForeignKey(
                blank=True,
                help_text="Cached: Current published version (if any)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="published_for_pages",
                to="webpages.pageversion",
            ),
        ),
        migrations.AddField(
            model_name="webpage",
            name="is_currently_published",
            field=models.BooleanField(
                db_index=True,
                default=False,
                help_text="Cached: Whether page has a currently published version",
            ),
        ),
        migrations.AddField(
            model_name="webpage",
            name="latest_version",
            field=models.ForeignKey(
                blank=True,
                help_text="Cached: Latest version (regardless of publication status)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="latest_for_pages",
                to="webpages.pageversion",
            ),
        ),
        migrations.RunPython(populate_publication_cache, migrations.RunPython.noop),
        migrations.AddIndex(
            model_name="webpage",
            index=models.Index(
                fields=["is_currently_published"], name="webpages_is_published_idx"
            ),
        ),
    ]
