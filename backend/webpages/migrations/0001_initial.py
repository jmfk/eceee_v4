# Generated by Django 4.2.23 on 2025-07-15 11:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PageLayout",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "slot_configuration",
                    models.JSONField(
                        help_text="JSON defining available slots and their properties"
                    ),
                ),
                (
                    "css_classes",
                    models.TextField(
                        blank=True,
                        help_text="CSS classes to apply to pages using this layout",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PageTheme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "css_variables",
                    models.JSONField(
                        help_text="JSON object with CSS custom properties"
                    ),
                ),
                (
                    "custom_css",
                    models.TextField(
                        blank=True, help_text="Additional custom CSS for this theme"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WidgetType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField()),
                (
                    "json_schema",
                    models.JSONField(
                        help_text="JSON schema defining the widget's configuration fields"
                    ),
                ),
                (
                    "template_name",
                    models.CharField(
                        help_text="Template file used to render this widget type",
                        max_length=255,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WebPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                ("sort_order", models.IntegerField(default=0)),
                (
                    "publication_status",
                    models.CharField(
                        choices=[
                            ("unpublished", "Unpublished"),
                            ("scheduled", "Scheduled"),
                            ("published", "Published"),
                            ("expired", "Expired"),
                        ],
                        default="unpublished",
                        max_length=20,
                    ),
                ),
                (
                    "effective_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this page should become public",
                        null=True,
                    ),
                ),
                (
                    "expiry_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this page should no longer be public",
                        null=True,
                    ),
                ),
                ("meta_title", models.CharField(blank=True, max_length=255)),
                ("meta_description", models.TextField(blank=True)),
                ("meta_keywords", models.CharField(blank=True, max_length=500)),
                (
                    "linked_object_type",
                    models.CharField(
                        blank=True,
                        help_text="Content type for object-based pages",
                        max_length=50,
                    ),
                ),
                (
                    "linked_object_id",
                    models.PositiveIntegerField(
                        blank=True, help_text="ID of the linked object", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_pages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modified_pages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "layout",
                    models.ForeignKey(
                        blank=True,
                        help_text="Leave blank to inherit from parent",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="webpages.pagelayout",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="webpages.webpage",
                    ),
                ),
                (
                    "theme",
                    models.ForeignKey(
                        blank=True,
                        help_text="Leave blank to inherit from parent",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="webpages.pagetheme",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order", "title"],
                "unique_together": {("parent", "slug")},
            },
        ),
        migrations.CreateModel(
            name="PageWidget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slot_name",
                    models.CharField(
                        help_text="Layout slot where this widget is placed",
                        max_length=100,
                    ),
                ),
                ("sort_order", models.IntegerField(default=0)),
                (
                    "configuration",
                    models.JSONField(help_text="Widget-specific configuration data"),
                ),
                (
                    "inherit_from_parent",
                    models.BooleanField(
                        default=True,
                        help_text="Whether child pages inherit this widget",
                    ),
                ),
                (
                    "override_parent",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this widget overrides a parent widget",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="webpages.webpage",
                    ),
                ),
                (
                    "widget_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="webpages.widgettype",
                    ),
                ),
            ],
            options={
                "ordering": ["slot_name", "sort_order"],
                "unique_together": {("page", "slot_name", "sort_order")},
            },
        ),
        migrations.CreateModel(
            name="PageVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version_number", models.PositiveIntegerField()),
                (
                    "page_data",
                    models.JSONField(
                        help_text="Complete serialized page data including widgets"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of changes in this version"
                    ),
                ),
                (
                    "is_current",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the currently active version",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="webpages.webpage",
                    ),
                ),
            ],
            options={
                "ordering": ["-version_number"],
                "unique_together": {("page", "version_number")},
            },
        ),
    ]
