# Generated by Django 4.2.23 on 2025-08-23 11:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("content", "0015_alter_tag_name_alter_tag_slug"),
    ]

    operations = [
        migrations.CreateModel(
            name="MediaCollection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("members", "Members Only"),
                            ("staff", "Staff Only"),
                            ("private", "Private"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_media_collections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modified_media_collections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "namespace",
                    models.ForeignKey(
                        help_text="Namespace this collection belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content.namespace",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="MediaTag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("slug", models.SlugField()),
                (
                    "color",
                    models.CharField(
                        default="#3B82F6", help_text="Hex color code", max_length=7
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Optional tag description"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_media_tags",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "namespace",
                    models.ForeignKey(
                        help_text="Namespace this tag belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content.namespace",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MediaFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("original_filename", models.CharField(max_length=255)),
                (
                    "file_path",
                    models.CharField(help_text="S3 key/path", max_length=500),
                ),
                ("file_size", models.BigIntegerField(help_text="File size in bytes")),
                ("content_type", models.CharField(max_length=100)),
                (
                    "file_hash",
                    models.CharField(
                        help_text="SHA-256 hash for deduplication",
                        max_length=64,
                        unique=True,
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("document", "Document"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("archive", "Archive"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("width", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "ai_generated_tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="AI-suggested tags based on content analysis",
                    ),
                ),
                ("ai_suggested_title", models.CharField(blank=True, max_length=255)),
                (
                    "ai_extracted_text",
                    models.TextField(
                        blank=True,
                        help_text="Text extracted from images/documents via OCR",
                    ),
                ),
                (
                    "ai_confidence_score",
                    models.FloatField(
                        blank=True,
                        help_text="AI confidence score for suggestions (0.0-1.0)",
                        null=True,
                    ),
                ),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("members", "Members Only"),
                            ("staff", "Staff Only"),
                            ("private", "Private"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "collections",
                    models.ManyToManyField(
                        blank=True, to="file_manager.mediacollection"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_media_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modified_media_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "namespace",
                    models.ForeignKey(
                        help_text="Namespace this file belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content.namespace",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(blank=True, to="file_manager.mediatag"),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="mediacollection",
            name="tags",
            field=models.ManyToManyField(blank=True, to="file_manager.mediatag"),
        ),
        migrations.CreateModel(
            name="MediaUsage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "usage_type",
                    models.CharField(
                        choices=[
                            ("widget", "Widget"),
                            ("page_data", "Page Data"),
                            ("content", "Content"),
                            ("collection", "Collection"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        help_text="ID of the object using this media", max_length=100
                    ),
                ),
                (
                    "object_type",
                    models.CharField(
                        help_text="Type of object (model name)", max_length=50
                    ),
                ),
                (
                    "field_name",
                    models.CharField(
                        blank=True,
                        help_text="Field name where media is used",
                        max_length=100,
                    ),
                ),
                (
                    "context_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional context about usage",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="media_usage_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "media_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_records",
                        to="file_manager.mediafile",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["media_file"], name="file_manage_media_f_5d9642_idx"
                    ),
                    models.Index(
                        fields=["usage_type", "object_id"],
                        name="file_manage_usage_t_19565d_idx",
                    ),
                    models.Index(
                        fields=["object_type"], name="file_manage_object__52719c_idx"
                    ),
                ],
                "unique_together": {
                    ("media_file", "usage_type", "object_id", "field_name")
                },
            },
        ),
        migrations.CreateModel(
            name="MediaThumbnail",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        choices=[
                            ("small", "Small (150x150)"),
                            ("medium", "Medium (300x300)"),
                            ("large", "Large (600x600)"),
                            ("xlarge", "Extra Large (1200x1200)"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "file_path",
                    models.CharField(help_text="S3 path to thumbnail", max_length=500),
                ),
                ("width", models.PositiveIntegerField()),
                ("height", models.PositiveIntegerField()),
                (
                    "file_size",
                    models.BigIntegerField(help_text="Thumbnail file size in bytes"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "media_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="thumbnails",
                        to="file_manager.mediafile",
                    ),
                ),
            ],
            options={
                "ordering": ["size"],
                "indexes": [
                    models.Index(
                        fields=["media_file", "size"],
                        name="file_manage_media_f_61f1b5_idx",
                    )
                ],
                "unique_together": {("media_file", "size")},
            },
        ),
        migrations.AddIndex(
            model_name="mediatag",
            index=models.Index(
                fields=["namespace", "name"], name="file_manage_namespa_0e9070_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediatag",
            index=models.Index(
                fields=["namespace", "slug"], name="file_manage_namespa_04edfb_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="mediatag",
            unique_together={("name", "namespace"), ("slug", "namespace")},
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["file_type"], name="file_manage_file_ty_64cfb7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["namespace", "file_type"], name="file_manage_namespa_b94819_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["namespace", "access_level"],
                name="file_manage_namespa_57a815_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["namespace", "created_at"],
                name="file_manage_namespa_d7e913_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["file_hash"], name="file_manage_file_ha_bbdf8e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["content_type"], name="file_manage_content_2c85c3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["created_by"], name="file_manage_created_bedc58_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["namespace", "title"], name="file_manage_namespa_c19e5b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["namespace", "slug"], name="file_manage_namespa_012dcc_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="mediafile",
            unique_together={("slug", "namespace")},
        ),
        migrations.AddIndex(
            model_name="mediacollection",
            index=models.Index(
                fields=["namespace", "access_level"],
                name="file_manage_namespa_b60857_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mediacollection",
            index=models.Index(
                fields=["namespace", "created_at"],
                name="file_manage_namespa_ecfccf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mediacollection",
            index=models.Index(
                fields=["namespace", "slug"], name="file_manage_namespa_82bc42_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="mediacollection",
            unique_together={("slug", "namespace")},
        ),
    ]
