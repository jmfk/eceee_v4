# Generated by Django 4.2.23 on 2025-08-25 12:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("content", "0015_alter_tag_name_alter_tag_slug"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("file_manager", "0003_temporaryupload"),
    ]

    operations = [
        migrations.CreateModel(
            name="PendingMediaFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("original_filename", models.CharField(max_length=255)),
                (
                    "file_path",
                    models.CharField(help_text="S3 key/path", max_length=500),
                ),
                ("file_size", models.BigIntegerField(help_text="File size in bytes")),
                ("content_type", models.CharField(max_length=100)),
                (
                    "file_hash",
                    models.CharField(
                        help_text="SHA-256 hash for deduplication", max_length=64
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("document", "Document"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("archive", "Archive"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("width", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "ai_generated_tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="AI-suggested tags based on content analysis",
                    ),
                ),
                ("ai_suggested_title", models.CharField(blank=True, max_length=255)),
                (
                    "ai_extracted_text",
                    models.TextField(
                        blank=True,
                        help_text="Text extracted from images/documents via OCR",
                    ),
                ),
                (
                    "ai_confidence_score",
                    models.FloatField(
                        blank=True,
                        help_text="AI confidence score for suggestions (0.0-1.0)",
                        null=True,
                    ),
                ),
                (
                    "folder_path",
                    models.CharField(
                        blank=True, help_text="Optional folder path", max_length=500
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When this pending file expires"),
                ),
                (
                    "namespace",
                    models.ForeignKey(
                        help_text="Namespace this file belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content.namespace",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pending_media_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.DeleteModel(
            name="TemporaryUpload",
        ),
        migrations.AddIndex(
            model_name="pendingmediafile",
            index=models.Index(
                fields=["namespace", "status"], name="file_manage_namespa_6ea49d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pendingmediafile",
            index=models.Index(
                fields=["uploaded_by", "status"], name="file_manage_uploade_71dadb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pendingmediafile",
            index=models.Index(
                fields=["status", "expires_at"], name="file_manage_status_e4c00d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pendingmediafile",
            index=models.Index(
                fields=["file_hash"], name="file_manage_file_ha_d851b2_idx"
            ),
        ),
    ]
