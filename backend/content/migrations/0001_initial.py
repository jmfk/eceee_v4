# Generated by Django 4.2.23 on 2025-07-16 07:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        default="#3B82F6",
                        help_text="Hex color code for this category",
                        max_length=7,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "content",
                    models.TextField(blank=True, help_text="Main content body"),
                ),
                (
                    "excerpt",
                    models.TextField(
                        blank=True,
                        help_text="Short excerpt for listings and previews",
                        max_length=500,
                    ),
                ),
                ("is_published", models.BooleanField(default=False)),
                ("published_date", models.DateTimeField(blank=True, null=True)),
                ("featured", models.BooleanField(default=False)),
                ("meta_title", models.CharField(blank=True, max_length=255)),
                ("meta_description", models.TextField(blank=True, max_length=160)),
                ("meta_keywords", models.CharField(blank=True, max_length=500)),
                (
                    "featured_image",
                    models.URLField(blank=True, help_text="URL to featured image"),
                ),
                (
                    "gallery_images",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of image URLs for gallery",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("author", models.CharField(blank=True, max_length=255)),
                (
                    "byline",
                    models.CharField(
                        blank=True,
                        help_text="Author byline or credentials",
                        max_length=500,
                    ),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                ("source_url", models.URLField(blank=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                ("show_author", models.BooleanField(default=True)),
                ("show_publish_date", models.BooleanField(default=True)),
                ("allow_comments", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="news_articles",
                        to="content.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modified_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="news_articles", to="content.tag"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "News Articles",
                "ordering": ["-priority", "-published_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "content",
                    models.TextField(blank=True, help_text="Main content body"),
                ),
                (
                    "excerpt",
                    models.TextField(
                        blank=True,
                        help_text="Short excerpt for listings and previews",
                        max_length=500,
                    ),
                ),
                ("is_published", models.BooleanField(default=False)),
                ("published_date", models.DateTimeField(blank=True, null=True)),
                ("featured", models.BooleanField(default=False)),
                ("meta_title", models.CharField(blank=True, max_length=255)),
                ("meta_description", models.TextField(blank=True, max_length=160)),
                ("meta_keywords", models.CharField(blank=True, max_length=500)),
                (
                    "featured_image",
                    models.URLField(blank=True, help_text="URL to featured image"),
                ),
                (
                    "gallery_images",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of image URLs for gallery",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("middle_name", models.CharField(blank=True, max_length=100)),
                (
                    "display_name",
                    models.CharField(
                        blank=True,
                        help_text="Public display name (defaults to first + last name)",
                        max_length=255,
                    ),
                ),
                ("job_title", models.CharField(blank=True, max_length=255)),
                ("department", models.CharField(blank=True, max_length=255)),
                ("organization", models.CharField(blank=True, max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("office_location", models.CharField(blank=True, max_length=255)),
                ("biography", models.TextField(blank=True)),
                (
                    "expertise_areas",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of expertise areas or specializations",
                    ),
                ),
                ("qualifications", models.TextField(blank=True)),
                ("website_url", models.URLField(blank=True)),
                ("linkedin_url", models.URLField(blank=True)),
                ("twitter_handle", models.CharField(blank=True, max_length=50)),
                (
                    "member_type",
                    models.CharField(
                        choices=[
                            ("staff", "Staff"),
                            ("board", "Board Member"),
                            ("volunteer", "Volunteer"),
                            ("advisor", "Advisor"),
                            ("alumni", "Alumni"),
                            ("partner", "Partner"),
                        ],
                        default="staff",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=True)),
                ("show_contact_info", models.BooleanField(default=True)),
                ("show_biography", models.BooleanField(default=True)),
                ("list_in_directory", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="members",
                        to="content.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modified_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="members", to="content.tag"
                    ),
                ),
            ],
            options={
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="LibraryItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "content",
                    models.TextField(blank=True, help_text="Main content body"),
                ),
                (
                    "excerpt",
                    models.TextField(
                        blank=True,
                        help_text="Short excerpt for listings and previews",
                        max_length=500,
                    ),
                ),
                ("is_published", models.BooleanField(default=False)),
                ("published_date", models.DateTimeField(blank=True, null=True)),
                ("featured", models.BooleanField(default=False)),
                ("meta_title", models.CharField(blank=True, max_length=255)),
                ("meta_description", models.TextField(blank=True, max_length=160)),
                ("meta_keywords", models.CharField(blank=True, max_length=500)),
                (
                    "featured_image",
                    models.URLField(blank=True, help_text="URL to featured image"),
                ),
                (
                    "gallery_images",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of image URLs for gallery",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("document", "Document"),
                            ("report", "Report"),
                            ("policy", "Policy"),
                            ("guide", "Guide"),
                            ("manual", "Manual"),
                            ("form", "Form"),
                            ("template", "Template"),
                            ("presentation", "Presentation"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("dataset", "Dataset"),
                            ("other", "Other"),
                        ],
                        default="document",
                        max_length=30,
                    ),
                ),
                (
                    "file_url",
                    models.URLField(blank=True, help_text="URL to the main file"),
                ),
                (
                    "file_size",
                    models.CharField(
                        blank=True, help_text="e.g., '2.5 MB'", max_length=50
                    ),
                ),
                (
                    "file_format",
                    models.CharField(
                        blank=True, help_text="e.g., 'PDF', 'DOCX'", max_length=20
                    ),
                ),
                (
                    "attachments",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of additional file URLs with metadata",
                    ),
                ),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("members", "Members Only"),
                            ("staff", "Staff Only"),
                            ("restricted", "Restricted"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                ("version", models.CharField(blank=True, max_length=20)),
                (
                    "isbn",
                    models.CharField(
                        blank=True, help_text="ISBN for books", max_length=20
                    ),
                ),
                (
                    "doi",
                    models.CharField(
                        blank=True, help_text="DOI for academic papers", max_length=100
                    ),
                ),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("view_count", models.PositiveIntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="library_items",
                        to="content.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modified_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="library_items", to="content.tag"
                    ),
                ),
            ],
            options={
                "ordering": ["-featured", "-published_date", "title"],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "content",
                    models.TextField(blank=True, help_text="Main content body"),
                ),
                (
                    "excerpt",
                    models.TextField(
                        blank=True,
                        help_text="Short excerpt for listings and previews",
                        max_length=500,
                    ),
                ),
                ("is_published", models.BooleanField(default=False)),
                ("published_date", models.DateTimeField(blank=True, null=True)),
                ("featured", models.BooleanField(default=False)),
                ("meta_title", models.CharField(blank=True, max_length=255)),
                ("meta_description", models.TextField(blank=True, max_length=160)),
                ("meta_keywords", models.CharField(blank=True, max_length=500)),
                (
                    "featured_image",
                    models.URLField(blank=True, help_text="URL to featured image"),
                ),
                (
                    "gallery_images",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of image URLs for gallery",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("all_day", models.BooleanField(default=False)),
                (
                    "timezone",
                    models.CharField(
                        default="UTC",
                        help_text="Event timezone (e.g., 'America/New_York')",
                        max_length=50,
                    ),
                ),
                ("location_name", models.CharField(blank=True, max_length=255)),
                ("location_address", models.TextField(blank=True)),
                (
                    "location_url",
                    models.URLField(blank=True, help_text="Google Maps or venue URL"),
                ),
                ("virtual_meeting_url", models.URLField(blank=True)),
                ("registration_required", models.BooleanField(default=False)),
                ("registration_url", models.URLField(blank=True)),
                ("max_attendees", models.PositiveIntegerField(blank=True, null=True)),
                ("current_attendees", models.PositiveIntegerField(default=0)),
                ("organizer_name", models.CharField(blank=True, max_length=255)),
                ("organizer_email", models.EmailField(blank=True, max_length=254)),
                ("organizer_phone", models.CharField(blank=True, max_length=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("cancelled", "Cancelled"),
                            ("postponed", "Postponed"),
                            ("completed", "Completed"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("show_location", models.BooleanField(default=True)),
                ("show_organizer", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events",
                        to="content.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modified_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="events", to="content.tag"
                    ),
                ),
            ],
            options={
                "ordering": ["start_date", "title"],
            },
        ),
    ]
