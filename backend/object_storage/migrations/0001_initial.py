# Generated by Django 4.2.23 on 2025-08-29 08:36

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ObjectTypeDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique identifier for the object type (e.g., 'news', 'blog')",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="Display name for the object type", max_length=200
                    ),
                ),
                (
                    "plural_label",
                    models.CharField(
                        help_text="Plural display name for the object type",
                        max_length=200,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of what this object type represents",
                    ),
                ),
                (
                    "icon_image",
                    models.ImageField(
                        blank=True,
                        help_text="Visual representation of this object type",
                        null=True,
                        upload_to="object_types/icons/",
                    ),
                ),
                (
                    "schema",
                    models.JSONField(
                        default=dict,
                        help_text="JSON schema defining the fields for this object type",
                    ),
                ),
                (
                    "slot_configuration",
                    models.JSONField(
                        default=dict,
                        help_text="JSON configuration defining widget slots and restrictions",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this object type is available for use",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "metadata",
                    models.JSONField(
                        default=dict,
                        help_text="Additional extensible properties for this object type",
                    ),
                ),
                (
                    "allowed_child_types",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Object types that can be children of this type",
                        to="object_storage.objecttypedefinition",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["label"],
            },
        ),
        migrations.CreateModel(
            name="ObjectInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Display title for this object", max_length=300
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly identifier, unique within object type",
                        max_length=300,
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        default=dict,
                        help_text="Object data according to the type's schema",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        help_text="Publication status of this object",
                        max_length=20,
                    ),
                ),
                (
                    "widgets",
                    models.JSONField(
                        default=dict,
                        help_text="Widget configurations for each slot defined by the object type",
                    ),
                ),
                (
                    "publish_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this object should be published",
                        null=True,
                    ),
                ),
                (
                    "unpublish_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this object should be unpublished",
                        null=True,
                    ),
                ),
                (
                    "version",
                    models.PositiveIntegerField(
                        default=1, help_text="Current version number"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "metadata",
                    models.JSONField(
                        default=dict,
                        help_text="Additional extensible properties for this object",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "object_type",
                    models.ForeignKey(
                        help_text="The type definition this object follows",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="object_storage.objecttypedefinition",
                    ),
                ),
                (
                    "parent_object",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent object for hierarchical relationships",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="object_storage.objectinstance",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ObjectVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version_number", models.PositiveIntegerField()),
                (
                    "data",
                    models.JSONField(
                        help_text="Snapshot of object data at this version"
                    ),
                ),
                (
                    "widgets",
                    models.JSONField(
                        help_text="Snapshot of widget configurations at this version"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "change_description",
                    models.TextField(
                        blank=True,
                        help_text="Description of changes made in this version",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="object_storage.objectinstance",
                    ),
                ),
            ],
            options={
                "ordering": ["-version_number"],
                "indexes": [
                    models.Index(
                        fields=["object", "version_number"],
                        name="object_stor_object__fe50a7_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="object_stor_created_c3b8c2_idx"
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="objectversion",
            constraint=models.UniqueConstraint(
                fields=("object", "version_number"), name="unique_version_per_object"
            ),
        ),
        migrations.AddIndex(
            model_name="objecttypedefinition",
            index=models.Index(fields=["name"], name="object_stor_name_d55377_idx"),
        ),
        migrations.AddIndex(
            model_name="objecttypedefinition",
            index=models.Index(
                fields=["is_active"], name="object_stor_is_acti_ed81ae_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="objecttypedefinition",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["schema"], name="object_stor_schema_3a0cc7_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="objecttypedefinition",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["slot_configuration"], name="object_stor_slot_co_809099_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="objectinstance",
            index=models.Index(
                fields=["object_type", "status"], name="object_stor_object__763b5a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="objectinstance",
            index=models.Index(
                fields=["slug", "object_type"], name="object_stor_slug_b7d003_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="objectinstance",
            index=models.Index(
                fields=["status", "publish_date"], name="object_stor_status_5fd09e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="objectinstance",
            index=models.Index(
                fields=["parent_object"], name="object_stor_parent__aead78_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="objectinstance",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["data"], name="object_stor_data_06e577_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="objectinstance",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["widgets"], name="object_stor_widgets_a9f3cd_gin"
            ),
        ),
        migrations.AddConstraint(
            model_name="objectinstance",
            constraint=models.UniqueConstraint(
                fields=("slug", "object_type"), name="unique_slug_per_object_type"
            ),
        ),
    ]
