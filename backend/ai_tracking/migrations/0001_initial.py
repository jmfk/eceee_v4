# Generated by Django 4.2.25 on 2025-10-28 07:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIModelPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('openai', 'OpenAI'), ('anthropic', 'Anthropic'), ('google', 'Google AI'), ('cohere', 'Cohere'), ('other', 'Other')], db_index=True, max_length=50)),
                ('model_name', models.CharField(db_index=True, max_length=100)),
                ('input_price_per_1k', models.DecimalField(decimal_places=6, help_text='Price per 1000 input tokens in USD', max_digits=10)),
                ('output_price_per_1k', models.DecimalField(decimal_places=6, help_text='Price per 1000 output tokens in USD', max_digits=10)),
                ('effective_date', models.DateTimeField(default=django.utils.timezone.now, help_text='When this price became effective')),
                ('last_verified', models.DateTimeField(auto_now=True, help_text='Last time this price was verified')),
                ('is_stale', models.BooleanField(default=False, help_text='Whether this price needs to be updated')),
                ('auto_updated', models.BooleanField(default=False, help_text='Whether this price was automatically fetched from API')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Model Price',
                'verbose_name_plural': 'AI Model Prices',
                'ordering': ['-effective_date'],
                'indexes': [models.Index(fields=['provider', 'model_name'], name='ai_tracking_provide_f9d3ab_idx'), models.Index(fields=['is_stale'], name='ai_tracking_is_stal_d8f438_idx')],
                'unique_together': {('provider', 'model_name', 'effective_date')},
            },
        ),
        migrations.CreateModel(
            name='AIBudgetAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('budget_amount', models.DecimalField(decimal_places=2, help_text='Budget threshold in USD', max_digits=10)),
                ('period', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], help_text='Budget period', max_length=20)),
                ('provider', models.CharField(blank=True, help_text='Optional: limit to specific provider', max_length=50)),
                ('model_name', models.CharField(blank=True, help_text='Optional: limit to specific model', max_length=100)),
                ('email_recipients', models.JSONField(default=list, help_text='List of email addresses to notify')),
                ('threshold_percentage', models.IntegerField(default=80, help_text='Alert when spending reaches this percentage of budget')),
                ('is_active', models.BooleanField(default=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, help_text='Optional: limit to specific user', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Budget Alert',
                'verbose_name_plural': 'AI Budget Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(db_index=True, max_length=50)),
                ('model_name', models.CharField(db_index=True, max_length=100)),
                ('input_tokens', models.IntegerField(help_text='Number of input tokens')),
                ('output_tokens', models.IntegerField(help_text='Number of output tokens')),
                ('total_cost', models.DecimalField(decimal_places=6, help_text='Total cost in USD', max_digits=10)),
                ('task_description', models.CharField(help_text='Brief description of what this AI call was for', max_length=255)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional context data (JSON)')),
                ('prompt', models.TextField(blank=True)),
                ('response', models.TextField(blank=True)),
                ('store_full_data', models.BooleanField(default=False, help_text='Whether full prompt/response were stored')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('duration_ms', models.IntegerField(blank=True, help_text='API call duration in milliseconds', null=True)),
                ('error_message', models.TextField(blank=True)),
                ('was_successful', models.BooleanField(default=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_usage_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Usage Log',
                'verbose_name_plural': 'AI Usage Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['provider', 'model_name'], name='ai_tracking_provide_55f7fe_idx'), models.Index(fields=['user', 'created_at'], name='ai_tracking_user_id_d0dd7f_idx'), models.Index(fields=['created_at'], name='ai_tracking_created_0b5e17_idx'), models.Index(fields=['was_successful'], name='ai_tracking_was_suc_c3c440_idx')],
            },
        ),
    ]
