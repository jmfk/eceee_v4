# Generated by Django 4.2.25 on 2025-10-28 07:14

from decimal import Decimal
from django.db import migrations
from django.utils import timezone


def seed_initial_prices(apps, schema_editor):
    """Seed initial AI model prices."""
    AIModelPrice = apps.get_model("ai_tracking", "AIModelPrice")

    # Current pricing as of October 2024
    # Prices are per 1000 tokens in USD

    prices = [
        # OpenAI Models
        {
            "provider": "openai",
            "model_name": "gpt-4",
            "input_price_per_1k": Decimal("0.030000"),  # $30/1M tokens
            "output_price_per_1k": Decimal("0.060000"),  # $60/1M tokens
            "notes": "GPT-4 base model - high capability for complex tasks",
        },
        {
            "provider": "openai",
            "model_name": "gpt-4-turbo",
            "input_price_per_1k": Decimal("0.010000"),  # $10/1M tokens
            "output_price_per_1k": Decimal("0.030000"),  # $30/1M tokens
            "notes": "GPT-4 Turbo - faster and more affordable than base GPT-4",
        },
        {
            "provider": "openai",
            "model_name": "gpt-4o",
            "input_price_per_1k": Decimal("0.005000"),  # $5/1M tokens
            "output_price_per_1k": Decimal("0.015000"),  # $15/1M tokens
            "notes": "GPT-4o - multimodal flagship model",
        },
        {
            "provider": "openai",
            "model_name": "gpt-4o-mini",
            "input_price_per_1k": Decimal("0.000150"),  # $0.15/1M tokens
            "output_price_per_1k": Decimal("0.000600"),  # $0.60/1M tokens
            "notes": "GPT-4o mini - affordable intelligence for fast, lightweight tasks",
        },
        {
            "provider": "openai",
            "model_name": "gpt-3.5-turbo",
            "input_price_per_1k": Decimal("0.000500"),  # $0.50/1M tokens
            "output_price_per_1k": Decimal("0.001500"),  # $1.50/1M tokens
            "notes": "GPT-3.5 Turbo - legacy model for simple tasks",
        },
        {
            "provider": "openai",
            "model_name": "o1-preview",
            "input_price_per_1k": Decimal("0.015000"),  # $15/1M tokens
            "output_price_per_1k": Decimal("0.060000"),  # $60/1M tokens
            "notes": "o1 preview - advanced reasoning model",
        },
        {
            "provider": "openai",
            "model_name": "o1-mini",
            "input_price_per_1k": Decimal("0.003000"),  # $3/1M tokens
            "output_price_per_1k": Decimal("0.012000"),  # $12/1M tokens
            "notes": "o1 mini - faster reasoning model",
        },
        # Anthropic Models
        {
            "provider": "anthropic",
            "model_name": "claude-3-opus-20240229",
            "input_price_per_1k": Decimal("0.015000"),  # $15/1M tokens
            "output_price_per_1k": Decimal("0.075000"),  # $75/1M tokens
            "notes": "Claude 3 Opus - most capable model for complex tasks",
        },
        {
            "provider": "anthropic",
            "model_name": "claude-3-sonnet-20240229",
            "input_price_per_1k": Decimal("0.003000"),  # $3/1M tokens
            "output_price_per_1k": Decimal("0.015000"),  # $15/1M tokens
            "notes": "Claude 3 Sonnet - balanced performance and speed",
        },
        {
            "provider": "anthropic",
            "model_name": "claude-3-haiku-20240307",
            "input_price_per_1k": Decimal("0.000250"),  # $0.25/1M tokens
            "output_price_per_1k": Decimal("0.001250"),  # $1.25/1M tokens
            "notes": "Claude 3 Haiku - fastest and most compact model",
        },
        {
            "provider": "anthropic",
            "model_name": "claude-3-5-sonnet-20241022",
            "input_price_per_1k": Decimal("0.003000"),  # $3/1M tokens
            "output_price_per_1k": Decimal("0.015000"),  # $15/1M tokens
            "notes": "Claude 3.5 Sonnet - latest improved version",
        },
        {
            "provider": "anthropic",
            "model_name": "claude-3-5-haiku-20241022",
            "input_price_per_1k": Decimal("0.000800"),  # $0.80/1M tokens
            "output_price_per_1k": Decimal("0.004000"),  # $4/1M tokens
            "notes": "Claude 3.5 Haiku - latest fast model",
        },
    ]

    now = timezone.now()

    for price_data in prices:
        AIModelPrice.objects.create(
            provider=price_data["provider"],
            model_name=price_data["model_name"],
            input_price_per_1k=price_data["input_price_per_1k"],
            output_price_per_1k=price_data["output_price_per_1k"],
            effective_date=now,
            auto_updated=True,
            notes=price_data["notes"],
            is_stale=False,
        )


def reverse_seed(apps, schema_editor):
    """Remove seeded prices."""
    AIModelPrice = apps.get_model("ai_tracking", "AIModelPrice")
    AIModelPrice.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("ai_tracking", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(seed_initial_prices, reverse_seed),
    ]
